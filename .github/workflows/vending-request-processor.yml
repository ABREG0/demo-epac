name: vending-request-processor
run-name: Vending Request Processor Example

on:
  push:    
    branches:      
      - 'vending-001'
    # paths:
    #   - 'workload/build/**/*.yml'
  workflow_dispatch:
    inputs:
      json_payload:
        description: The "version" tag to deploy
        required: false
        default: '{
                        "request_id": "auto-generated",
                        "global_id": "blink6",
                        "project_name": "my new blink6 project",
                        "environment": "Automation Cloud",
                        "subscription_configuration": "Ring_2, Ring_3, Ring_5",
                        "application_workload_name": "blink6",
                        "geographic_area": "us",
                        "default_resource_groups": 2,
                        "request_custom_resource_groups": [
                          "azr-blink6-rg-01",
                          "azr-blink6-rg-02"
                        ],
                        "workload_type": "storage",
                        "security_zone": "intranet",
                        "network_peering": true,
                        "confidential_data_classification": false,
                        "team_name": "blink6 team",
                        "tags": {
                          "Application": "blink6",
                          "BusinessStream": "blink6",
                          "CostCenter": "123456",
                          "Customer": "blink6",
                          "UserGroup": "blink6"
                        },
                        "contact_email_address": "requestor.owner@domain.com",
                        "alternative_email_addresses": [
                          "team1@domain.com",
                          "email2@domain.com"
                        ],
                        "azure_devOps_project_URLs": "https://blink6.com",
                        "aad_groups": {
                          "owner": "xxxxx-xxxxx-xxxxx-xxxxx",
                          "team": "yyyyy-yyyyy-yyyyy-yyyyy",
                          "reader": "zzzzz-zzzzz-zzzzz-zzzzz"
                        },
                        "budgets": {
                          "budget": {
                            "budget_amount": 8000,
                            "budget_occurrence": "monthly",
                            "budget_threshold": 800,
                            "budget_notification_emails": [
                              "email_1@domain.com",
                              "email_2@domain.com"
                            ]
                          }
                        }
                      }'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  demo_app_authentication:
    runs-on: ubuntu-latest
    environment: 
      name: sbx
    steps:
      - name: Display paload
        id: get-paload
        run: |
          echo "${{ inputs.json_payload }}"

      - name: Get GitHub App User ID
        id: get-user-id
        run: | 
          echo "user-id=$(gh api "/users/${GH_TOKEN}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        #   echo "user-id ${user-id}"
        env:
          GH_TOKEN: $GITHUB_TOKEN

  # deploy:
  #   name: Apply ${{ inputs.version }} to sbx
  #   # # if: ${{ github.ref == 'refs/heads/workflows' && inputs.version != '' }}
  #   uses: ./.github/workflows/pipeline-apply.yml # my-internal/azure-workflows/.github/workflows/pipeline-apply.yml@main # v2.0.0
  #   with:
  #     cloud_provider: azure
  #     azure_client_id: f69cdf15-340f-4e53-8a28-b6f8a4d9a21d # ghe-npd-action
  #     azure_tenant_id: 81eb6a17-7dfc-44e0-abf2-9ec81d33578b
  #     environment_name: sbx # <NDP_or_PRO>
  #     optfile_path: optfiles/sbx.json # optfiles/_opt_file_example.yml
  #     optfile_runner: ubuntu-latest # ubuntu-latest 
  #     ref: workflows # ${{ inputs.version }} # <place branch or tag name containing your released code>
  #   secrets:
  #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #     APP_PRIVATE_KEY: ${{ secrets.TF_APP_PRIVATE_KEY }}
