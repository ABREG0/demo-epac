on:
  push:    
    branches:      
      - 'vending-001'
    # paths:
    #   - 'workload/build/**/*.yml'
  workflow_dispatch:
    inputs:
      environment_name:
        required: false
        type: string
        default: subX
      loglevel:
        required: false
        type: string
        default: failure
      runner:
        required: false
        type: string
        default: ubuntu-latest
      ref:
        required: false
        type: string
        default: vending-001
      json_payload1:
        description: debug one
        type: string
        required: false
        default: 'json1'
      json_payload:
        description: The "version" tag to deploy
        type: string
        required: false
        default: |
                  {
                    "request_id": "auto-generated",
                    "global_id": "blink6",
                    "project_name": "my new blink6 project",
                    "environment": "Automation Cloud",
                    "subscription_configuration": "Ring_2, Ring_3, Ring_5",
                    "application_workload_name": "blink6",
                    "geographic_area": "us",
                    "default_resource_groups": 2,
                    "request_custom_resource_groups": [
                      "azr-blink6-rg-01",
                      "azr-blink6-rg-02"
                    ],
                    "workload_type": "storage",
                    "security_zone": "intranet",
                    "network_peering": true,
                    "confidential_data_classification": false,
                    "team_name": "blink6 team",
                    "tags": {
                      "Application": "blink6",
                      "BusinessStream": "blink6",
                      "CostCenter": "123456",
                      "Customer": "blink6",
                      "UserGroup": "blink6"
                    },
                    "contact_email_address": "requestor.owner@domain.com",
                    "alternative_email_addresses": [
                      "team1@domain.com",
                      "email2@domain.com"
                    ],
                    "azure_devOps_project_URLs": "https://blink6.com",
                    "aad_groups": {
                      "owner": "xxxxx-xxxxx-xxxxx-xxxxx",
                      "team": "yyyyy-yyyyy-yyyyy-yyyyy",
                      "reader": "zzzzz-zzzzz-zzzzz-zzzzz"
                    },
                    "budgets": {
                      "budget": {
                        "budget_amount": 8000,
                        "budget_occurrence": "monthly",
                        "budget_threshold": 800,
                        "budget_notification_emails": [
                          "email_1@domain.com",
                          "email_2@domain.com"
                        ]
                      }
                    }
                  }


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  processor:
    name: json [${{ inputs.environment_name }}] processor
    uses: ./.github/workflows/vending-request-processor1.yml
    with:
      json_payload: |
                      {
                        "request_id": "auto-generated",
                        "global_id": "blink6",
                        "project_name": "my new blink6 project",
                        "environment": "Automation Cloud",
                        "subscription_configuration": "Ring_2, Ring_3, Ring_5",
                        "application_workload_name": "blink6",
                        "geographic_area": "us",
                        "default_resource_groups": 2,
                        "request_custom_resource_groups": [
                          "azr-blink6-rg-01",
                          "azr-blink6-rg-02"
                        ],
                        "workload_type": "storage",
                        "security_zone": "intranet",
                        "network_peering": true,
                        "confidential_data_classification": false,
                        "team_name": "blink6 team",
                        "tags": {
                          "Application": "blink6",
                          "BusinessStream": "blink6",
                          "CostCenter": "123456",
                          "Customer": "blink6",
                          "UserGroup": "blink6"
                        },
                        "contact_email_address": "requestor.owner@domain.com",
                        "alternative_email_addresses": [
                          "team1@domain.com",
                          "email2@domain.com"
                        ],
                        "azure_devOps_project_URLs": "https://blink6.com",
                        "aad_groups": {
                          "owner": "xxxxx-xxxxx-xxxxx-xxxxx",
                          "team": "yyyyy-yyyyy-yyyyy-yyyyy",
                          "reader": "zzzzz-zzzzz-zzzzz-zzzzz"
                        },
                        "budgets": {
                          "budget": {
                            "budget_amount": 8000,
                            "budget_occurrence": "monthly",
                            "budget_threshold": 800,
                            "budget_notification_emails": [
                              "email_1@domain.com",
                              "email_2@domain.com"
                            ]
                          }
                        }
                      }
      environment_name: ${{ inputs.environment_name }}
      loglevel: ${{ inputs.loglevel }}
      ref: ${{ inputs.ref }}
      runner: ${{ inputs.runner }}
    secrets: inherit

  example_job:
    name: example [${{ inputs.environment_name }}] job
    needs: [processor]
    runs-on: ubuntu-latest
    env:
        json_payload: ${{ inputs.json_payload }}
        environment_name: ${{ inputs.environment_name }}
        loglevel: ${{ inputs.loglevel }}
        ref: ${{ inputs.ref }}
        runner: ${{ inputs.runner }}
    environment: 
      name: sbx
    steps:
      - name: Display payload1
        run: |
          echo '##############################################'
          echo 'echo payload /
                [$json_payload1.body]
                [${{ inputs.json_payload1 }}]
                '
          echo '##############################################'
          echo using events [${{ github.event.inputs.json_payload1.body }}]
          echo '##############################################'
          echo "one liner [$json_payload_env]"
          echo "one liner [${json_payload_env}]"
          echo '##############################################'
        env:
          json_payload_env : ${{ inputs.json_payload1 }}

      - name: Display payload
        run: |
          echo '##############################################'
          echo "echo payload /
                [$json_payload]
                "
          echo '##############################################'
          echo "using events [${{ github.event.inputs.json_payload.body }}]"
          echo '##############################################'
          echo 'one liner [`$json_payload]'
          echo "one liner [${json_payload}]"
          echo '##############################################'
        env:
          json_payload : ${{ inputs.json_payload }}
